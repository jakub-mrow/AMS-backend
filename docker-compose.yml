version: "3.3"

services:
  postgres:
    restart: unless-stopped
    build:
      context: ./docker/postgres
      dockerfile: Dockerfile
    image: ams-postgres:latest
    volumes:
      - "postgres:/var/lib/postgresql/data"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    expose:
      - "5432"
    ports:
      - "5432:5432"

  django:
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./docker/django/Dockerfile
    image: ams-django:latest
    volumes:
      - .:/code
    expose:
      - "8000"
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - EOD_TOKEN=${EOD_TOKEN}
    depends_on:
      - postgres
      - redis
      - celery
      - celery-beat

  redis:
    restart: unless-stopped
    build:
      context: ./docker/redis
      dockerfile: Dockerfile
    image: ams-redis:latest
    expose:
      - "6379"
    ports:
      - "6379:6379"

  celery:
    build:
      context: .
      dockerfile: ./docker/celery/Dockerfile
    image: ams-celery-worker:latest
    volumes:
      - .:/code
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - EOD_TOKEN=${EOD_TOKEN}
    depends_on:
      - redis

  celery-beat:
    build:
      context: .
      dockerfile: ./docker/celery-beat/Dockerfile
    image: ams-celery-beat:latest
    volumes:
      - .:/code
    depends_on:
      - redis

volumes:
  postgres: