openapi: 3.0.3
info:
  title: AMS Endpoints
  description: OpenAPI specification in yaml format describing functionalities provided by AMS Backend service.
  version: 1.0.0
  contact: {}
servers:
  - url: 127.0.0.1
paths:
  #Authorization
  /auth/register:
    post:
      tags:
        - Authorization
      summary: Register request
      description: Register request
      operationId: registerRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: zbyszek3@zbyszek.pl
                username:
                  type: string
                  example: zbyszek3
                password:
                  type: string
                  example: haslo1234
      responses:
        '201':
          description: Created

          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    example: zbyszek3@zbyszek.pl
                  username:
                    type: string
                    example: zbyszek3

  /auth/login:
    post:
      tags:
        - Authorization
      summary: Login request
      description: Login request
      operationId: loginRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: zbyszek2
                password:
                  type: string
                  example: haslo1234

      responses:
        '200':
          description: OK

          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: string
                    example: >-
                      eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjkyODA5NDkzLCJpYXQiOjE2OTE1MTM0OTMsImp0aSI6IjhlNzdkZGY1NzYzOTRkODViYzk5N2NkZWM5Njg1ZDJlIiwidXNlcl9pZCI6MiwidXNlcm5hbWUiOiJ6YnlzemVrMiJ9._0Lr8-r_PsrsQYcp84XaZqtHUt3mWyBAA_JFtb6y_mg
                  refresh:
                    type: string
                    example: >-
                      eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY5MjgwOTQ5MywiaWF0IjoxNjkxNTEzNDkzLCJqdGkiOiI5ZGI2YWE5NmFkNjE0MDQ0YjA4ZWNmMmVmMmNjNTcxNyIsInVzZXJfaWQiOjIsInVzZXJuYW1lIjoiemJ5c3plazIifQ.6gBxwdBdFqe1AcF_n4K71w81FxpDE5t45KWJI04OhOY

  /auth/login/refresh:
    post:
      tags:
        - Authorization
      summary: Refresh token
      description: Refresh token
      operationId: refreshToken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh:
                  type: string
                  example: >-
                    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY5MjgwOTQ5MywiaWF0IjoxNjkxNTEzNDkzLCJqdGkiOiI5ZGI2YWE5NmFkNjE0MDQ0YjA4ZWNmMmVmMmNjNTcxNyIsInVzZXJfaWQiOjIsInVzZXJuYW1lIjoiemJ5c3plazIifQ.6gBxwdBdFqe1AcF_n4K71w81FxpDE5t45KWJI04OhOY
            examples:
              Refresh token:
                value:
                  refresh: >-
                    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY5MjgwOTQ5MywiaWF0IjoxNjkxNTEzNDkzLCJqdGkiOiI5ZGI2YWE5NmFkNjE0MDQ0YjA4ZWNmMmVmMmNjNTcxNyIsInVzZXJfaWQiOjIsInVzZXJuYW1lIjoiemJ5c3plazIifQ.6gBxwdBdFqe1AcF_n4K71w81FxpDE5t45KWJI04OhOY
      responses:
        '200':
          description: OK

          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: string
                    example: >-
                      eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjkyODA5NTE4LCJpYXQiOjE2OTE1MTM0OTMsImp0aSI6IjQ5OTFlYzAyZjk2NjQ3MDg4NmM1OTYyZmRiOGViZDA0IiwidXNlcl9pZCI6MiwidXNlcm5hbWUiOiJ6YnlzemVrMiJ9.OEGNm9B0hHyVnj83MGacvKayIZKgoe9FBul2DlaDcNc
              examples:
                Refresh token:
                  value:
                    access: >-
                      eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjkyODA5NTE4LCJpYXQiOjE2OTE1MTM0OTMsImp0aSI6IjQ5OTFlYzAyZjk2NjQ3MDg4NmM1OTYyZmRiOGViZDA0IiwidXNlcl9pZCI6MiwidXNlcm5hbWUiOiJ6YnlzemVrMiJ9.OEGNm9B0hHyVnj83MGacvKayIZKgoe9FBul2DlaDcNc
  #Accounts
  /api/accounts:
    get:
      tags:
        - Accounts
      summary: List user's accounts
      description: List user's accounts
      operationId: listUserSAccounts
      responses:
        '200':
          description: OK

          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:

                    id:
                      type: number
                      example: 5
                    name:
                      type: string
                      example: KONTO 2
                    user_id:
                      type: number
                      example: 1
                    balances:
                      type: array
                      items:
                        type: object
                        properties:
                          account_id:
                            type: number
                            example: 5
                          amount:
                            type: number
                            example: 50.25
                          currency:
                            type: string
                            example: PLN
                    last_save_date:
                      type: string
                      format: date-time
                      example: 2023-08-13T00:00:00.000000
                    last_transaction_date:
                      type: string
                      format: date-time
                      example: 2023-08-13T10:30:00.123456

    post:
      tags:
        - Accounts
      summary: Open account
      description: Open account
      operationId: openAccount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: KONTO 5

      responses:
        '201':
          description: Created

          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Account created


  /api/accounts/{account_id}:
    get:
      tags:
        - Accounts
      summary: View account
      description: View account
      operationId: viewAccount
      parameters:
        - in: path
          name: account_id
          schema:
            type: integer
          required: true
          description: Numeric ID of the user's account

      responses:
        '200':
          description: OK

          content:
            application/json:
              schema:
                type: object
                properties:

                  id:
                    type: number
                    example: 5
                  name:
                    type: string
                    example: KONTO 2
                  user_id:
                    type: number
                    example: 1
                  balances:
                    type: array
                    items:
                      type: object
                      properties:
                        account_id:
                          type: number
                          example: 5
                        amount:
                          type: number
                          example: 50.25
                        currency:
                          type: string
                          example: PLN
                  last_save_date:
                      type: string
                      format: date-time
                      example: 2023-08-13T00:00:00.000000
                  last_transaction_date:
                      type: string
                      format: date-time
                      example: 2023-08-13T10:30:00.123456

    delete:
      tags:
        - Accounts
      summary: Close account
      description: Close account
      operationId: closeAccount
      parameters:
        - in: path
          name: account_id
          schema:
            type: integer
          required: true
          description: Numeric ID of the user's account
      responses:
        '204':
          description: No content

          content: {}

  /api/accounts/{account_id}/set_preferences:
    put:
      tags:
        - Accounts
      summary: Set account preferences
      description: Set account preferences
      operationId: setAccountPreferences
      parameters:
        - in: path
          name: account_id
          schema:
            type: integer
          required: true
          description: Numeric ID of the user's account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_currency:
                  type: string
                  example: EUR

      responses:
        '200':
          description: OK

          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Account preferences updated
  /api/accounts/{account_id}/get_preferences:
    get:
      tags:
        - Accounts
      summary: Get account preferences
      description: Get account preferences
      operationId: getAccountPreferences
      parameters:
        - in: path
          name: account_id
          schema:
            type: integer
          required: true
          description: Numeric ID of the user's account

      responses:
        '200':
          description: OK

          content:
            application/json:
              schema:
                type: object
                properties:
                  account_id:
                    type: integer
                    example: 1
                  base_currency:
                    type: string
                    example: EUR
  #Transactions

  /api/accounts/{account_id}/transactions:
    get:
      tags:
        - Transactions
      summary: Get accounts transactions
      description: Get accounts transactions
      operationId: getAccountsTransactions
      parameters:
        - in: path
          name: account_id
          schema:
            type: integer
          required: true
          description: Numeric ID of the user's account
      responses:
        '200':
          description: OK

          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    account_id:
                      type: number
                      example: 5
                    amount:
                      type: number
                      example: 100
                    currency:
                      type: string
                      example: BTC
                    date:
                      type: string
                      format: date-time
                      example: '2023-08-07T19:23:12.267756'
                    id:
                      type: number
                      example: 64
                    type:
                      type: string
                      example: deposit


    post:
      tags:
        - Transactions
      summary: Create Transaction
      description: Create Transaction
      operationId: createTransaction
      parameters:
        - in: path
          name: account_id
          schema:
            type: integer
          required: true
          description: Numeric ID of the user's account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  example: 100
                currency:
                  type: string
                  example: BTC
                type:
                  type: string
                  example: deposit

      responses:
        '201':
          description: Created

          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Transaction created.

  /api/accounts/{account_id}/transactions/{transaction_id}:
    delete:
      tags:
        - Transactions
      summary: Delete Transaction
      description: Delete Transaction
      operationId: deleteTransaction
      parameters:
        - in: path
          name: account_id
          schema:
            type: integer
          required: true
          description: Numeric ID of the user's account
        - in: path
          name: transaction_id
          schema:
            type: integer
          required: true
          description: Numeric ID of the transaction


      responses:
        '204':
          description: No content

  #Stocks
  /api/search:
    get:
      tags:
        - Stocks
      summary: Search EOD API
      description: Search EOD API
      operationId: searchStocks
      parameters:
        - in: query
          name: query_string
          schema:
            type: string
            example: ORLEN
          required: true
          description: Query to search for

      responses:
        '200':
          description: OK
          content:

            application/json:
              example:
                - Code: PKN
                  Exchange: WAR
                  Name: Polski Koncern Naftowy ORLEN SA
                  Type: Common Stock
                  Country: Poland
                  Currency: PLN
                  ISIN: PLPKN0000018
                  previousClose: 66.45
                  previousCloseDate: '2023-10-18'

  /api/get_stock_details:
    get:
      tags:
        - Stocks
      summary: Get stock details
      description: Get stock details
      operationId: getStockDetails
      parameters:
        - in: query
          name: stock
          schema:
            type: string
            example: NVDA
          required: true
          description: Stock ticker
        - in: query
          name: exchange
          schema:
            type: string
            example: US
          required: true
          description: Exchange code
        - in: query
          name: period
          schema:
            type: string
            default: d
            enum:
              - d
              - w
              - m
            description: ’d’ for daily, ‘w’ for weekly, ‘m’ for monthly prices
          required: false

          description: Date from
        - in: query
          name: from
          schema:
              type: string
              example: '2021-01-01'
          required: false
          description: From date
        - in: query
          name: to
          schema:
            type: string
            example: '2021-01-01'
          required: false
          description: To date

      responses:
        '200':
          description: OK
          content:

            application/json:
              example:
                price_changes:
                  - date: '2023-10-20'
                    open: 65.4
                    high: 66.52
                    low: 65.01
                    close: 65.41
                    adjusted_close: 65.41
                    volume: 1920339
                  - date: '2023-10-23'
                    open: 65.2
                    high: 66.76
                    low: 64.53
                    close: 65.88
                    adjusted_close: 65.88
                    volume: 8968832
                  - date: '2023-10-30'
                    open: 66.0
                    high: 67.96
                    low: 64.92
                    close: 65.56
                    adjusted_close: 65.56
                    volume: 10857355
                  - date: '2023-11-06'
                    open: 66.5
                    high: 66.83
                    low: 62.04
                    close: 62.16
                    adjusted_close: 62.16
                    volume: 9246802
                  - date: '2023-11-13'
                    open: 62.57
                    high: 65.2
                    low: 61.66
                    close: 62.26
                    adjusted_close: 62.26
                    volume: 10381602
                  - date: '2023-11-20'
                    open: 62.3
                    high: 64.48
                    low: 62.3
                    close: 64.2
                    adjusted_close: 64.2
                    volume: 7452768
                exchange_info:
                  id: 48
                  name: Warsaw Stock Exchange (GPW)
                  mic: XWAR
                  country: Poland
                  code: WAR
                  timezone: Europe/Warsaw
                  opening_hour: '09:00:00'
                  closing_hour: '16:50:00'
                current_price: 64.2
                previous_close: 63.07
                percentage_change_previous_close: 1.79

  /api/get_stock_history:
    get:
      tags:
        - Stocks
      summary: Get stock historical price change
      description: Get stock historical price change
      operationId: getStockHistoricalChange
      parameters:
        - in: query
          name: stock
          schema:
            type: string
            example: NVDA
          required: true
          description: Stock ticker
        - in: query
          name: exchange
          schema:
            type: string
            example: US
          required: true
          description: Exchange code
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  today:
                    type: number
                    example: 1.33
                  week:
                    type: number
                    example: -3.57
                  month:
                    type: number
                    example: 2.47
                  three_months:
                    type: number
                    example: -5.0
                  six_months:
                    type: number
                    example: 17.75
                  year:
                    type: number
                    example: 177.74
                  three_years:
                    type: number
                    example: 240.87
                  five_years:
                    type: number
                    example: 1083.2
                  all_time:
                    type: number
                    example: 122483.73


  #Exchanges
  /api/exchanges:
    get:
      tags:
        - Exchanges
      summary: Get all exchanges
      description: Get list of all exchanges in the system
      operationId: getExchanges

      responses:
        '200':
          description: OK
          content:

            application/json:
              example:
                - id: 48
                  name: Xetra
                  mic: XETR
                  country: Germany
                  code: XETRA
                  timezone: Europe/Berlin
                  opening_hour: 09:00:00
                  closing_hour: '17:30:00'

  #Favourite Assets
  /api/favourite_assets:
    post:
      tags:
        - Favourite Assets
      summary: Add asset to favourites
      description: Add asset to favourites
      operationId: addAssetToFavourites
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "VUSA"
                exchange:
                  type: string
                  example: "LSE"
                name:
                  type: string
                  example: "Vanguard S&P 500 UCITS ETF"
                type:
                  type: string
                  example: "ETF"
                country:
                  type: string
                  example: "UK"
                currency:
                  type: string
                  example: "GBP"
                isin:
                  type: string
                  example: "IE00B3XXRP09"

      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                    msg:
                        type: string
                        example: "Asset added to favourites"
    get:
      tags:
        - Favourite Assets
      summary: Get favourite assets
      description: Get favourite assets
      operationId: getFavouriteAssets

      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 3
                    code:
                      type: string
                      example: "VUSA"
                    exchange:
                      type: string
                      example: "LSE"
                    name:
                      type: string
                      example: "Vanguard S&P 500 UCITS ETF"
                    type:
                      type: string
                      example: "ETF"
                    country:
                      type: string
                      example: "UK"
                    currency:
                      type: string
                      example: "GBP"
                    isin:
                      type: string
                      example: "IE00B3XXRP09"
    delete:
      tags:
        - Favourite Assets
      summary: Delete asset from favourites
      description: Delete asset from favourites
      operationId: deleteFavouriteAsset
      parameters:
        - in: path
          name: asset_id
          schema:
            type: integer
          required: true
          description: Numeric ID of the user's favourite asset
      responses:
        '204':
          description: No content

  # Stock News
  /api/get_stock_news:
    get:
      tags:
        - Stock News
      summary: Get stock news
      description: Get stock news
      operationId: getStockNews
      parameters:
        - in: query
          name: stock
          schema:
            type: string
            example: AMD
          required: true
          description: Stock ticker
      responses:
        '200' :
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    title:
                      type: string
                      example: Dow Jones Rises After Strong GDP, Fed Beige Book Next; GM Surges On Buyback, Dividend Hike
                    link:
                      type: string
                      format: uri
                      example: https://finance.yahoo.com/m/9c6ec5f8-5e08-32c7-985d-c1ac25fee4b5/dow-jones-rises-after-strong.html
                    date:
                      type: string
                      format: date-time
                      example: '2023-11-29T14:44:03Z'

tags:
  - name: Authorization
  - name: Accounts
  - name: Transactions
  - name: Stocks
  - name: Exchanges
  - name: Favourite Assets
  - name: Stock News
